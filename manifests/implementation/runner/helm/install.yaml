ocfVersion: 0.0.1
revision: 0.1.0
kind: Implementation
metadata:
  prefix: cap.implementation.runner.helm
  name: install
  license:
    name: "Apache 2.0"
  displayName: "Install"
  description: "Install action for Helm Runner"
  documentationURL: https://helm.sh/
  maintainers:
    - email: team-dev@capact.io
      name: Capact Dev Team
      url: https://capact.io

spec:
  appVersion: "3.x.x"

  additionalInput:
    typeInstances:
      kubeconfig:
        typeRef:
          path: cap.type.containerization.kubernetes.kubeconfig
          revision: 0.1.0
        verbs: [ "get" ]

  implements:
    - path: cap.core.interface.runner.generic.run
      revision: 0.1.0
    - path: cap.interface.runner.helm.install
      revision: 0.1.0

  requires:
    cap.core.type.platform:
      oneOf:
        - name: kubernetes
          revision: 0.1.0
    cap.core.type.hub.storage:
      allOf:
        - name: cap.type.helm.release.storage
          revision: 0.1.0
          alias: helm-release-storage

  imports:
    - interfaceGroupPath: cap.interface.runner.argo
      alias: argo
      methods:
        - name: run
          revision: 0.1.0

  outputTypeInstanceRelations:
    helm-release: {} # no dependencies
    # Do not upload `additional` TypeInstance by default.
    # Upper-level workflows may define it in the outputTypeInstanceRelations.

  action:
    runnerInterface: argo.run
    args:
      workflow:
        entrypoint: helm
        templates:
          - name: helm
            inputs:
              artifacts:
                # The input parameters that holds information what should be executed
                - name: input-parameters
                - name: runner-context
                - name: kubeconfig
                  optional: true
            outputs:
              artifacts:
                - name: helm-release
                  from: "{{steps.resolve-helm-rel-value.outputs.artifacts.ti-artifact}}"
                - name: additional
                  from: "{{steps.helm-install.outputs.artifacts.additional}}"
            steps:
              - - name: helm-install
                  template: helm-install
                  arguments:
                    artifacts:
                      - name: input-parameters
                        from: "{{inputs.artifacts.input-parameters}}"
                      - name: runner-context
                        from: "{{inputs.artifacts.runner-context}}"
                      - name: kubeconfig
                        from: "{{inputs.artifacts.kubeconfig}}"

              # allows reusing this workflow as a part of other umbrella workflows and read the artifact value
              - - name: resolve-helm-rel-value
                  template: resolve-ti-art-value
                  capact-outputTypeInstances:
                    - name: helm-release
                      from: ti-artifact
                      backend: helm-release-storage
                  arguments:
                    artifacts:
                      - name: ti-artifact
                        from: "{{steps.helm-install.outputs.artifacts.helm-release}}"
                      - name: backend
                        from: "{{workflow.outputs.artifacts.helm-release-storage}}"

          - name: helm-install
            inputs:
              artifacts:
                # The input parameters that holds information what should be executed
                - name: input-parameters
                  path: "/runner-args"
                - name: runner-context
                  path: "/runner-context"
                - name: kubeconfig
                  path: "/kubeconfig-ti"
                  optional: true
            outputs:
              artifacts:
                - name: helm-release
                  path: "/helm-release.yaml"
                - name: additional
                  path: "/additional.yaml"
                  optional: true
            volumes:
              - name: tmp
                emptyDir: { }
            container:
              image: ghcr.io/capactio/pr/helm-runner:PR-716
              env:
                - name: RUNNER_OPTIONAL_KUBECONFIG_TI
                  value: "{{inputs.artifacts.kubeconfig.path}}"
                - name: RUNNER_CONTEXT_PATH
                  value: "{{inputs.artifacts.runner-context.path}}"
                - name: RUNNER_ARGS_PATH
                  value: "{{inputs.artifacts.input-parameters.path}}"
                - name: RUNNER_LOGGER_DEV_MODE
                  value: "true"
                - name: RUNNER_COMMAND
                  value: "install"
                - name: RUNNER_OUTPUT_HELM_RELEASE_FILE_PATH
                  value: "{{outputs.artifacts.helm-release.path}}"
                - name: RUNNER_OUTPUT_ADDITIONAL_FILE_PATH
                  value: "{{outputs.artifacts.additional.path}}"
              volumeMounts:
                - name: tmp
                  mountPath: /tmp

          - name: resolve-ti-art-value
            inputs:
              artifacts:
                - name: ti-artifact
                  path: /tmp/input-ti.yaml
                - name: backend
                  path: /tmp/storage-backend.yaml
            outputs:
              artifacts:
                - name: ti-artifact
                  path: /tmp/output.yaml
            container:
              image: ghcr.io/capactio/pr/ti-value-fetcher:PR-707
              env:
                - name: APP_LOGGER_DEV_MODE
                  value: "true"
                - name: APP_INPUT_TI_FILE_PATH
                  value: "{{inputs.artifacts.ti-artifact.path}}"
                - name: APP_INPUT_BACKEND_TI_FILE_PATH
                  value: "{{inputs.artifacts.backend.path}}"
                - name: APP_OUTPUT_FILE_PATH
                  value: "{{outputs.artifacts.ti-artifact.path}}"
